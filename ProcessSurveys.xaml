<Activity mc:Ignorable="sap sap2010" x:Class="ProcessSurveys" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Settings" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1011.33333333333,5080.66666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessSurveys_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="28">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="24">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="The process reads incoming emails looking for Weekly Survey replies and updates the Master file accordingly" DisplayName="Process Weekly Surveys" sap:VirtualizedContainerService.HintSize="854,5016" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="foundReport" />
      <Variable x:TypeArguments="sd:DataTable" Name="EmployeeData" />
      <Variable x:TypeArguments="x:String" Name="theDateTmp" />
      <Variable x:TypeArguments="s:DateTime" Name="theDate" />
      <Variable x:TypeArguments="x:String" Name="theDay" />
      <Variable x:TypeArguments="s:DateTime" Name="theStartOfWeek" />
      <Variable x:TypeArguments="x:String" Name="updateYes" />
      <Variable x:TypeArguments="x:String" Name="theEmployee" />
      <Variable x:TypeArguments="x:Int32" Name="second_char" />
      <Variable x:TypeArguments="x:Int32" Name="first_char" />
      <Variable x:TypeArguments="x:String" Name="theEmployeeTmp" />
      <Variable x:TypeArguments="x:String" Name="theCell" />
      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="reportFileName" />
      <Variable x:TypeArguments="x:String" Name="WFH" />
      <Variable x:TypeArguments="x:String" Name="Office" />
      <Variable x:TypeArguments="x:String" Name="Travelling" />
      <Variable x:TypeArguments="x:String" Name="COVID19" />
      <Variable x:TypeArguments="x:String" Name="Quarantine" />
      <Variable x:TypeArguments="x:String" Name="NonEmployees" />
      <Variable x:TypeArguments="x:String" Name="PublicTrans" />
      <Variable x:TypeArguments="x:String" Name="Tested" />
      <Variable x:TypeArguments="x:String" Name="CountryTravel01" />
      <Variable x:TypeArguments="x:String" Name="TravelCity01" />
      <Variable x:TypeArguments="x:String" Name="travel01Start" />
      <Variable x:TypeArguments="x:String" Name="Travel01End" />
      <Variable x:TypeArguments="x:String" Name="CountryTravel02" />
      <Variable x:TypeArguments="x:String" Name="TravelCity02" />
      <Variable x:TypeArguments="x:String" Name="Travel02Start" />
      <Variable x:TypeArguments="x:String" Name="Travel02End" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="Attachment" />
      <Variable x:TypeArguments="x:Int32" Name="theIntCell" />
      <Variable x:TypeArguments="x:String" Name="Column_Name" />
      <Variable x:TypeArguments="x:Int32" Name="modulo" />
      <Variable x:TypeArguments="x:String" Name="theCellID" />
      <Variable x:TypeArguments="x:String" Name="theStartCellID" />
      <Variable x:TypeArguments="x:String" Name="RiskCell" />
      <Variable x:TypeArguments="ui:GenericValue" Name="OfficeRoad" />
      <Variable x:TypeArguments="ui:GenericValue" Name="OfficeNo" />
      <Variable x:TypeArguments="x:String" Name="Sunday" />
      <Variable x:TypeArguments="x:String" Name="Friday" />
      <Variable x:TypeArguments="x:String" Name="Saturday" />
      <Variable x:TypeArguments="x:String" Name="Wednesday" />
      <Variable x:TypeArguments="x:String" Name="Thursday" />
      <Variable x:TypeArguments="x:String" Name="Tuesday" />
      <Variable x:TypeArguments="x:String" Name="Monday" />
      <Variable x:TypeArguments="x:Int32" Name="Risk" />
      <Variable x:TypeArguments="x:String" Name="FName" />
      <Variable x:TypeArguments="x:String" Name="SName" />
      <Variable x:TypeArguments="s:DateTime" Name="theDateAsDate" />
      <Variable x:TypeArguments="s:DateTime" Name="surveyDateAsDate" />
      <Variable x:TypeArguments="x:String" Name="EmployeeForm" />
      <Variable x:TypeArguments="x:String" Name="Department" />
      <Variable x:TypeArguments="ui:GenericValue" Name="LocationGEN" />
      <Variable x:TypeArguments="x:String" Name="theLocation" />
      <Variable x:TypeArguments="x:Int32" Name="theCurrentRow" />
      <Variable x:TypeArguments="sd:DataTable" Name="distributionData" />
      <Variable x:TypeArguments="sd:DataTable" Name="FilteredDistribution" />
      <Variable x:TypeArguments="x:String" Name="MasterFile" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap:VirtualizedContainerService.HintSize="812,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="InitAllSettings.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Config.xlsx</InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Settings]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="812,97.3333333333333" sap2010:WorkflowViewState.IdRef="MultipleAssign_17">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_165">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[MasterFile]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[settings("MasterPath").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:GetOutlookMailMessages Account="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get any Weekly Survey Email" Filter="[subject]='Weekly Health Assessment'" GetAttachements="False" sap:VirtualizedContainerService.HintSize="812,22" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_1" MailFolder="Inbox" MarkAsRead="True" Messages="[foundReport]" OnlyUnreadMessages="True" Top="30" />
    <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Read the Email and then loop through the Survey Results and get the Survey data" DisplayName="For A Weekly Survey Email Found" sap:VirtualizedContainerService.HintSize="812,4567.33333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[foundReport]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="snm:MailMessage">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="report" />
          </ActivityAction.Argument>
          <TryCatch sap2010:Annotation.AnnotationText="If we find a Weekly Survey return Email AND it has an excel attached process the email - otherwise fail" DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="775.333333333333,4398" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <Sequence DisplayName="Process the Email" sap:VirtualizedContainerService.HintSize="736.666666666667,4129.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <Sequence.Variables>
                  <Variable x:TypeArguments="ui:WorkbookApplication" Name="MasterFileWorkbook" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Set the Employee Name" sap:VirtualizedContainerService.HintSize="694.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_1">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[theEmployeeTmp]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[report.from.ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:MultipleAssign DisplayName="Assign the basic fields" sap:VirtualizedContainerService.HintSize="694.666666666667,342.666666666667" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[theDateTmp]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[report.Headers("Date").ToString]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_136">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[theDateTmp]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[theDateTmp.Substring(0,10)]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="s:DateTime">[theDate]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="s:DateTime">[Datetime.ParseExact(theDateTmp,“MM/dd/yyyy”,System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[theDay]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[theDateAsDate.DayOfWeek.ToString]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="s:DateTime">[theStartOfWeek]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="s:DateTime">[theDate.AddDays((theDate.DayOfWeek - DayOfWeek.Monday) * -1)]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[updateYes]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">No</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Int32">[first_char]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Int32">[theEmployeeTmp.IndexOf("&lt;")]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Int32">[second_char]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Int32">[theEmployeeTmp.LastIndexOf("&gt;")]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:String">[theEmployee]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:String">[theEmployeeTmp.Substring(first_char+1,(second_char - first_char-1))]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
                <ui:SaveMailAttachments sap2010:Annotation.AnnotationText="Put in a temporary file location" Attachments="[reportFileName]" DisplayName="Save the Survey Attachment" FolderPath="[settings(&quot;TempFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="694.666666666667,117.333333333333" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_1" Message="[report]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:SaveMailAttachments>
                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Check this is a Weekly Survey Excel" sap:VirtualizedContainerService.HintSize="694.666666666667,545.333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[reportFileName]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:String">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Does the name match with the Config.xlsx file" sap:VirtualizedContainerService.HintSize="526,406.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_28">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Boolean" Name="isMatch" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:IsMatch DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="484,58.6666666666667" sap2010:WorkflowViewState.IdRef="IsMatch_1" Input="[item]" IsBuilderTabModified="False" Pattern="employee-form*.xlsx" RegexOption="IgnoreCase, Compiled" Result="[isMatch]" />
                        <If Condition="[isMatch]" DisplayName="If this is an Employee Weekly Survey Form " sap:VirtualizedContainerService.HintSize="484,216" sap2010:WorkflowViewState.IdRef="If_10">
                          <If.Then>
                            <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_29">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[EmployeeForm]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[item]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
                <If Condition="[EmployeeForm=&quot;&quot; or reportFileName.Count =0]" DisplayName="If the attached file is not a match STOP" sap:VirtualizedContainerService.HintSize="694.666666666667,214" sap2010:WorkflowViewState.IdRef="If_11">
                  <If.Then>
                    <Throw Exception="[New exception(&quot;Missing attachments&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                  </If.Then>
                </If>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Run the ReadSurvey process, get the results from the survey and pass the values back to this main process" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="694.666666666667,132" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="ReadSurvey.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="s:DateTime" x:Key="theDate">
                      <mva:VisualBasicValue x:TypeArguments="s:DateTime" ExpressionText="theDate" />
                    </InArgument>
                    <InArgument x:TypeArguments="ui:WorkbookApplication" x:Key="Attachment">
                      <mva:VisualBasicValue x:TypeArguments="ui:WorkbookApplication" ExpressionText="Attachment" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="EmployeeForm">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="EmployeeForm" />
                    </InArgument>
                    <OutArgument x:TypeArguments="s:DateTime" x:Key="theStartOfWeeko">
                      <mva:VisualBasicReference x:TypeArguments="s:DateTime" ExpressionText="theStartOfWeek" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="theLocationo">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="theLocation" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="s:DateTime" x:Key="surveyDateAsDateo">
                      <mva:VisualBasicReference x:TypeArguments="s:DateTime" ExpressionText="surveyDateAsDate" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="WFHo">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="WFH" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="Officeo">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="Office" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="ui:GenericValue" x:Key="OfficeRoado">
                      <mva:VisualBasicReference x:TypeArguments="ui:GenericValue" ExpressionText="OfficeRoad" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="ui:GenericValue" x:Key="OfficeNoo">
                      <mva:VisualBasicReference x:TypeArguments="ui:GenericValue" ExpressionText="OfficeNo" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="Travellingo">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="Travelling" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="Testedo">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="Tested" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="Quarantineo">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="Quarantine" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="COVID19o">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="COVID19" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="PublicTranso">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="PublicTrans" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="NonEmployeeso">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="NonEmployees" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="CountryTravel01o">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="CountryTravel01" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="TravelCity01o">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="TravelCity01" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="travel01Starto">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="travel01Start" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="Travel01Endo">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="Travel01End" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="TravelCity02o">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="TravelCity02" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="CountryTravel02o">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="CountryTravel02" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="Travel02Starto">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="Travel02Start" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="Travel02Endo">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="Travel02End" />
                    </OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Get current employees details from the DISTRIBUTION sheet" DisplayName="Get the employee basic information" sap:VirtualizedContainerService.HintSize="694.666666666667,1752" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" Workbook="[MasterFileWorkbook]" WorkbookPath="[Settings(&quot;MasterPath&quot;).ToString]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Start Processing" sap:VirtualizedContainerService.HintSize="660.666666666667,1612.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_33">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelReadRange AddHeaders="True" DataTable="[distributionData]" DisplayName="Get the Distribution list" sap:VirtualizedContainerService.HintSize="618.666666666667,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_5" SheetName="Distribution">
                          <ui:ExcelReadRange.Range>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </ui:ExcelReadRange.Range>
                        </ui:ExcelReadRange>
                        <ui:FilterDataTable DataTable="[distributionData]" DisplayName="Filter the list to just this employee" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="618.666666666667,58.6666666666667" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[FilteredDistribution]" SelectColumnsMode="Keep">
                          <ui:FilterDataTable.Filters>
                            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                              <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                <ui:FilterOperationArgument.Column>
                                  <InArgument x:TypeArguments="x:String">["Email"]</InArgument>
                                </ui:FilterOperationArgument.Column>
                                <ui:FilterOperationArgument.Operand>
                                  <InArgument x:TypeArguments="x:String">[theEmployee]</InArgument>
                                </ui:FilterOperationArgument.Operand>
                              </ui:FilterOperationArgument>
                            </scg:List>
                          </ui:FilterDataTable.Filters>
                          <ui:FilterDataTable.SelectColumns>
                            <scg:List x:TypeArguments="InArgument" Capacity="4">
                              <x:Null />
                            </scg:List>
                          </ui:FilterDataTable.SelectColumns>
                        </ui:FilterDataTable>
                        <If Condition="[FilteredDistribution.Rows.Count &lt; 1]" DisplayName="If employee NOT FOUND" sap:VirtualizedContainerService.HintSize="618.666666666667,610" sap2010:WorkflowViewState.IdRef="If_12">
                          <If.Then>
                            <Sequence DisplayName="Send exception" sap:VirtualizedContainerService.HintSize="418,459.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_30">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="Send an Error Email Notification" sap:VirtualizedContainerService.HintSize="376,367.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:MoveOutlookMessage Account="{x:Null}" DisplayName="Send the error notification email" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_2" MailFolder="[Settings(&quot;HARIAExceptionQueue&quot;).ToString]" MailMessage="[report]" />
                                <ui:MoveOutlookMessage Account="{x:Null}" DisplayName="Move the original email to the Exceptions queue" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_3" MailFolder="[Settings(&quot;HARIAExceptionQueue&quot;).ToString]" MailMessage="[report]" />
                                <Throw DisplayName="STOP - Unknown employee" Exception="[new BusinessRuleException(&quot;Temperature for this reply email is: Unknown&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                              </Sequence>
                            </Sequence>
                          </If.Then>
                        </If>
                        <ui:ForEachRow CurrentIndex="[theCurrentRow]" DataTable="[FilteredDistribution]" DisplayName="If Employee is in the Distribution List" sap:VirtualizedContainerService.HintSize="618.666666666667,673.333333333333" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
                          <ui:ForEachRow.Body>
                            <ActivityAction x:TypeArguments="sd:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="thisEmployee" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Determine the employee details" sap:VirtualizedContainerService.HintSize="568,524" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[thisEmployee.Item(&quot;Email&quot;).ToString.Contains(theEmployee)]" DisplayName="If we have a matching Employee" sap:VirtualizedContainerService.HintSize="526,432" sap2010:WorkflowViewState.IdRef="If_13">
                                  <If.Then>
                                    <Sequence sap2010:Annotation.AnnotationText="Save the employee details for later" DisplayName="Get the employee REQUIRED details" sap:VirtualizedContainerService.HintSize="380,281.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="338,158.666666666667" sap2010:WorkflowViewState.IdRef="MultipleAssign_16">
                                        <ui:MultipleAssign.AssignOperations>
                                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_162">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[FName]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">[thisEmployee.Item("First Name").ToString]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_163">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[SName]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">[thisEmployee.Item("Last Name").ToString]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_164">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:String">[Department]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:String">[thisEmployee.Item("Department").ToString]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                          </scg:List>
                                        </ui:MultipleAssign.AssignOperations>
                                      </ui:MultipleAssign>
                                    </Sequence>
                                  </If.Then>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEachRow.Body>
                        </ui:ForEachRow>
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelApplicationScope>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Find a matching DATE and EMPLOYEE and update that entry with the new Survey details" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="694.666666666667,132" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="UpdateMasterFile.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="theEmployeei">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="theEmployee" />
                    </InArgument>
                    <InArgument x:TypeArguments="s:DateTime" x:Key="theStartofWeeki">
                      <mva:VisualBasicValue x:TypeArguments="s:DateTime" ExpressionText="theStartofWeek" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="theDayi">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="theDay" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:Int32" x:Key="theIntCelli">
                      <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="theIntCell" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="MasterFilei">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="MasterFile" />
                    </InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="updateYeso">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="updateYes" />
                    </OutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="WFHi">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="WFH" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Travellingi">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Travelling" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Officei">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Office" />
                    </InArgument>
                    <InArgument x:TypeArguments="ui:GenericValue" x:Key="OfficeRoadi">
                      <mva:VisualBasicValue x:TypeArguments="ui:GenericValue" ExpressionText="OfficeRoad" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="OfficeNoi">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="OfficeNo" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Testedi">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Tested" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Quarantinei">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Quarantine" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="COVID19i">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="COVID19" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="PublicTransi">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="PublicTrans" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="NonEmployeesi">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="NonEmployees" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="CountryTravel01i">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="CountryTravel01" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="TravelCity01i">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="TravelCity01" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="travel01Starti">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="travel01Start" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Travel01Endi">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Travel01End" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="CountryTravel02i">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="CountryTravel02" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="TravelCity02i">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="TravelCity02" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Travel02Starti">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Travel02Start" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Travel02Endi">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Travel02End" />
                    </InArgument>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="EmployeeDatai">
                      <mva:VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="EmployeeData" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="FNamei">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="FName" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="SNamei">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="SName" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Departmenti">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Department" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="Locationi">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="theLocation" />
                    </InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <ui:ExcelCloseWorkbook sap2010:Annotation.AnnotationText="Close the Master File Workbook" DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="694.666666666667,89.3333333333333" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_2" Workbook="[MasterFileWorkbook]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelCloseWorkbook>
                <ui:InvokeCode ContinueOnError="{x:Null}" Code="Array.ForEach(Directory.GetFiles(&quot;C:\Temp\&quot;),Sub(x) File.Delete(x))" DisplayName="Delete the temporary email attachment file" sap:VirtualizedContainerService.HintSize="694.666666666667,164" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
                  <ui:InvokeCode.Arguments>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:InvokeCode.Arguments>
                </ui:InvokeCode>
                <ui:MoveOutlookMessage Account="{x:Null}" DisplayName="Move Outlook Mail Message" sap:VirtualizedContainerService.HintSize="694.666666666667,86.6666666666667" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_1" MailFolder="[Settings(&quot;HARIAArchiveQueue&quot;).ToString]" MailMessage="[report]" />
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="741.333333333333,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[exception.Source.ToString+&quot; &quot;+ exception.Message.ToString]" />
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
  </Sequence>
</Activity>